{"remainingRequest":"D:\\newWork\\application\\node_modules\\babel-loader\\lib\\index.js!D:\\newWork\\application\\src\\router\\index.js","dependencies":[{"path":"D:\\newWork\\application\\src\\router\\index.js","mtime":1622196999651},{"path":"D:\\newWork\\application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\newWork\\application\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport Router from 'vue-router'; // 模板框架\n\nvar Main = function Main(resolve) {\n  return require(['@/views/menu/main'], resolve);\n}; // 登录页面\n\n\nvar login = function login(resolve) {\n  return require(['@/views/login/login'], resolve);\n}; // 首页\n\n\nvar homePage = function homePage(resolve) {\n  return require(['@/views/homePage/homePage'], resolve);\n};\n\nVue.use(Router); // import {routerBreadcrumb} from '@/utils/pageData.js'\n// import store from '@/store'\n\nvar router = new Router({\n  // mode: 'history',\n  routes: [{\n    path: '/login',\n    name: 'login',\n    component: login\n  }, {\n    path: '/',\n    meta: {\n      requiresAuth: true\n    },\n    component: Main,\n    children: [{\n      path: 'homePage',\n      name: 'homePage',\n      component: homePage\n    }]\n  }]\n});\n/*****\n * 路由跳转的时候 对cookie存储的值进行校验 如果找不到或者丢失\n * 强制跳转到登陆页  进行重新登陆\n * ****/\n\nimport { getCookie } from '@/config/cookie';\nrouter.beforeEach(function (to, from, next) {\n  var token = getCookie(\"tokenM\"); // && (!token || token === null || token == '' )\n\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  }) && (!token || token === null || token == '')) {\n    // window.location.href = '/';\n    console.log('233232');\n    next({\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n  } else {\n    console.log('dsad');\n    /****路由面包屑注入路由数据***/\n    // if (to.meta.list) {\n    //   let list = to.meta.list;\n    //   store.commit('changeBreadcumb', { list })\n    // }\n\n    next();\n  } // next()\n\n});\nexport default router;",{"version":3,"sources":["D:\\newWork\\application\\src\\router\\index.js"],"names":["Vue","Router","Main","resolve","require","login","homePage","use","router","routes","path","name","component","meta","requiresAuth","children","getCookie","beforeEach","to","from","next","token","matched","some","record","console","log","query","redirect","fullPath"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,OAAO;AAAA,SAAIC,OAAO,CAAC,CAAC,mBAAD,CAAD,EAAuBD,OAAvB,CAAX;AAAA,CAApB,C,CAEA;;;AACA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAF,OAAO;AAAA,SAAIC,OAAO,CAAC,CAAC,qBAAD,CAAD,EAAyBD,OAAzB,CAAX;AAAA,CAArB,C,CAEA;;;AACA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAH,OAAO;AAAA,SAAIC,OAAO,CAAC,CAAC,2BAAD,CAAD,EAA+BD,OAA/B,CAAX;AAAA,CAAxB;;AAcAH,GAAG,CAACO,GAAJ,CAAQN,MAAR,E,CAEA;AACA;;AAEA,IAAMO,MAAM,GAAG,IAAIP,MAAJ,CAAW;AACxB;AACAQ,EAAAA,MAAM,EAAE,CACN;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAiBC,IAAAA,IAAI,EAAE,OAAvB;AAA+BC,IAAAA,SAAS,EAAEP;AAA1C,GADM,EAGN;AAEEK,IAAAA,IAAI,EAAE,GAFR;AAGEG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHR;AAIEF,IAAAA,SAAS,EAAEV,IAJb;AAMEa,IAAAA,QAAQ,EAAE,CAER;AAACL,MAAAA,IAAI,EAAE,UAAP;AAAkBC,MAAAA,IAAI,EAAE,UAAxB;AAAmCC,MAAAA,SAAS,EAAEN;AAA9C,KAFQ;AANZ,GAHM;AAFgB,CAAX,CAAf;AAyBA;;;;;AAIA,SAAQU,SAAR,QAAwB,iBAAxB;AACAR,MAAM,CAACS,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAGpC,MAAMC,KAAK,GAAGL,SAAS,CAAC,QAAD,CAAvB,CAHoC,CAIpC;;AACA,MAAIE,EAAE,CAACI,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,CAAYC,YAAhB;AAAA,GAAtB,MAAuD,CAACO,KAAD,IAAUA,KAAK,KAAK,IAApB,IAA4BA,KAAK,IAAI,EAA5F,CAAJ,EAAsG;AACpG;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACEN,IAAAA,IAAI,CAAC;AACHV,MAAAA,IAAI,EAAE,QADH;AAEHiB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAEV,EAAE,CAACW;AAAf;AAFJ,KAAD,CAAJ;AAIH,GAPD,MAOO;AAELJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AACA;AACA;AACA;AACA;;AAEAN,IAAAA,IAAI;AACL,GAtBmC,CAuBpC;;AACD,CAxBD;AA0BA,eAAeZ,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\n\n// 模板框架\nconst Main = resolve => require(['@/views/menu/main'],resolve)\n\n// 登录页面\nconst login = resolve => require(['@/views/login/login'],resolve);\n\n// 首页\nconst homePage = resolve => require(['@/views/homePage/homePage'],resolve);\n\n\n\n\n\n\n\n\n\n\n\n\n\nVue.use(Router)\n\n// import {routerBreadcrumb} from '@/utils/pageData.js'\n// import store from '@/store'\n\nconst router = new Router({\n  // mode: 'history',\n  routes: [\n    { path: '/login',name: 'login',component: login},\n\n    {\n\n      path: '/',\n      meta: { requiresAuth: true },\n      component: Main,\n\n      children: [\n\n        {path: 'homePage',name: 'homePage',component: homePage},\n\n\n\n      ]\n\n  },\n\n  ]\n})\n\n\n/*****\n * 路由跳转的时候 对cookie存储的值进行校验 如果找不到或者丢失\n * 强制跳转到登陆页  进行重新登陆\n * ****/\nimport {getCookie} from '@/config/cookie'\nrouter.beforeEach((to, from, next) => {\n\n\n  const token = getCookie(\"tokenM\");\n  // && (!token || token === null || token == '' )\n  if (to.matched.some(record => record.meta.requiresAuth)&& (!token || token === null || token == '' )) {\n    // window.location.href = '/';\n    console.log('233232')\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      })\n  } else {\n\n    console.log('dsad')\n    /****路由面包屑注入路由数据***/\n    // if (to.meta.list) {\n    //   let list = to.meta.list;\n    //   store.commit('changeBreadcumb', { list })\n    // }\n\n    next()\n  }\n  // next()\n})\n\nexport default router\n"]}]}