{"remainingRequest":"D:\\newWork\\application\\node_modules\\babel-loader\\lib\\index.js!D:\\newWork\\application\\src\\config\\getSystem.js","dependencies":[{"path":"D:\\newWork\\application\\src\\config\\getSystem.js","mtime":1622193882226},{"path":"D:\\newWork\\application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\newWork\\application\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.index-of\";\nexport default {\n  install: function install(Vue, options) {\n    Vue.prototype.getSystem = function () {\n      //判断数组中是否包含某字符串  \n      Array.prototype.contains = function (needle) {\n        for (i in this) {\n          if (this[i].indexOf(needle) > 0) return i;\n        }\n\n        return -1;\n      };\n\n      var deviceType = navigator.userAgent; //获取userAgent信息  \n\n      console.log(deviceType); //打印到页面  \n\n      var md = new MobileDetect(deviceType); //初始化mobile-detect  \n\n      var os = md.os(); //获取系统  \n\n      var version = \"\"; //系统的版本号   \n\n      var model = \"\"; //设备型号\n\n      var system = \"pc\"; //系统区分\n\n      if (os == \"iOS\") {\n        //ios系统的处理  \n        version = md.version(\"iPhone\");\n        os = md.os();\n        model = md.mobile();\n        system = 'moblie';\n      } else if (os == \"AndroidOS\") {\n        //Android系统的处理  \n        os = md.os();\n        version = md.version(\"Android\");\n        var sss = deviceType.split(\";\");\n        var i = sss.contains(\"Build/\");\n        system = 'moblie';\n\n        if (i > -1) {\n          model = sss[i].substring(0, sss[i].indexOf(\"Build/\"));\n        }\n      } else {\n        os = md.os();\n        system = 'pc';\n      } //组装信息\n\n\n      var info = {\n        os: os,\n        //系统类型\n        version: version,\n        //系统版本号\n        model: model,\n        //设备型号\n        system: system\n      };\n      return info;\n    };\n  }\n};",{"version":3,"sources":["D:\\newWork\\application\\src\\config\\getSystem.js"],"names":["install","Vue","options","prototype","getSystem","Array","contains","needle","i","indexOf","deviceType","navigator","userAgent","console","log","md","MobileDetect","os","version","model","system","mobile","sss","split","substring","info"],"mappings":";;AAGA,eAAc;AACZA,EAAAA,OADY,mBACJC,GADI,EACCC,OADD,EACS;AACnBD,IAAAA,GAAG,CAACE,SAAJ,CAAcC,SAAd,GAA0B,YAAU;AAChC;AACFC,MAAAA,KAAK,CAACF,SAAN,CAAgBG,QAAhB,GAA2B,UAASC,MAAT,EAAiB;AAC1C,aAAKC,CAAL,IAAU,IAAV,EAAgB;AACZ,cAAI,KAAKA,CAAL,EAAQC,OAAR,CAAgBF,MAAhB,IAA0B,CAA9B,EACI,OAAOC,CAAP;AACP;;AACD,eAAO,CAAC,CAAR;AACD,OAND;;AAOA,UAAIE,UAAU,GAAGC,SAAS,CAACC,SAA3B,CATkC,CASG;;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAVkC,CAUV;;AACxB,UAAIK,EAAE,GAAG,IAAIC,YAAJ,CAAiBN,UAAjB,CAAT,CAXkC,CAWI;;AACtC,UAAIO,EAAE,GAAGF,EAAE,CAACE,EAAH,EAAT,CAZkC,CAYjB;;AACjB,UAAIC,OAAO,GAAG,EAAd,CAbkC,CAajB;;AACjB,UAAIC,KAAK,GAAG,EAAZ,CAdkC,CAcjB;;AACjB,UAAIC,MAAM,GAAG,IAAb,CAfkC,CAed;;AACpB,UAAIH,EAAE,IAAI,KAAV,EAAiB;AAAC;AACdC,QAAAA,OAAO,GAAIH,EAAE,CAACG,OAAH,CAAW,QAAX,CAAX;AACAD,QAAAA,EAAE,GAAGF,EAAE,CAACE,EAAH,EAAL;AACAE,QAAAA,KAAK,GAAGJ,EAAE,CAACM,MAAH,EAAR;AACAD,QAAAA,MAAM,GAAG,QAAT;AACH,OALD,MAKO,IAAIH,EAAE,IAAI,WAAV,EAAuB;AAAC;AAC3BA,QAAAA,EAAE,GAAGF,EAAE,CAACE,EAAH,EAAL;AACAC,QAAAA,OAAO,GAAGH,EAAE,CAACG,OAAH,CAAW,SAAX,CAAV;AACA,YAAII,GAAG,GAAGZ,UAAU,CAACa,KAAX,CAAiB,GAAjB,CAAV;AACA,YAAIf,CAAC,GAAGc,GAAG,CAAChB,QAAJ,CAAa,QAAb,CAAR;AACAc,QAAAA,MAAM,GAAG,QAAT;;AACA,YAAIZ,CAAC,GAAG,CAAC,CAAT,EAAY;AACRW,UAAAA,KAAK,GAAGG,GAAG,CAACd,CAAD,CAAH,CAAOgB,SAAP,CAAiB,CAAjB,EAAoBF,GAAG,CAACd,CAAD,CAAH,CAAOC,OAAP,CAAe,QAAf,CAApB,CAAR;AACH;AACJ,OATM,MASF;AACHQ,QAAAA,EAAE,GAAGF,EAAE,CAACE,EAAH,EAAL;AACAG,QAAAA,MAAM,GAAG,IAAT;AACD,OAjCiC,CAkClC;;;AACA,UAAIK,IAAI,GAAG;AACTR,QAAAA,EAAE,EAACA,EADM;AACH;AACNC,QAAAA,OAAO,EAACA,OAFC;AAEO;AAChBC,QAAAA,KAAK,EAACA,KAHG;AAGI;AACbC,QAAAA,MAAM,EAACA;AAJE,OAAX;AAMA,aAAOK,IAAP;AACD,KA1CD;AA2CD;AA7CW,CAAd","sourcesContent":["\r\n\r\n\r\nexport default{\r\n  install(Vue, options){\r\n    Vue.prototype.getSystem = function(){\r\n        //判断数组中是否包含某字符串  \r\n      Array.prototype.contains = function(needle) {  \r\n        for (i in this) {  \r\n            if (this[i].indexOf(needle) > 0)  \r\n                return i;  \r\n        }  \r\n        return -1;  \r\n      }  \r\n      var deviceType = navigator.userAgent;//获取userAgent信息  \r\n      console.log(deviceType);//打印到页面  \r\n      var md = new MobileDetect(deviceType);//初始化mobile-detect  \r\n      var os = md.os();//获取系统  \r\n      var version = \"\";//系统的版本号   \r\n      var model = \"\";  //设备型号\r\n      var system = \"pc\";  //系统区分\r\n      if (os == \"iOS\") {//ios系统的处理  \r\n          version =  md.version(\"iPhone\");\r\n          os = md.os();  \r\n          model = md.mobile(); \r\n          system = 'moblie'; \r\n      } else if (os == \"AndroidOS\") {//Android系统的处理  \r\n          os = md.os();  \r\n          version = md.version(\"Android\");\r\n          var sss = deviceType.split(\";\");  \r\n          var i = sss.contains(\"Build/\");  \r\n          system = 'moblie';\r\n          if (i > -1) {  \r\n              model = sss[i].substring(0, sss[i].indexOf(\"Build/\"));  \r\n          }  \r\n      }else{\r\n        os = md.os(); \r\n        system = 'pc';\r\n      }  \r\n      //组装信息\r\n      var info = {\r\n        os:os,//系统类型\r\n        version:version,//系统版本号\r\n        model:model, //设备型号\r\n        system:system,\r\n      };\r\n      return info;\r\n    }\r\n  }\r\n}\r\n\r\n"]}]}